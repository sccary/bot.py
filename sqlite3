import sqlite3
from telegram import Update
from telegram.ext import Application, CommandHandler, MessageHandler, filters

TOKEN = 'YOUR_BOT_TOKEN'

def create_db():
    conn = sqlite3.connect('files.db')
    c = conn.cursor()
    c.execute('''CREATE TABLE IF NOT EXISTS files
                 (user_id INTEGER, file_id TEXT, file_link TEXT)''')
    conn.commit()
    conn.close()

async def upload_file(update: Update, context):
    file = update.message.document
    if file:
        file_id = file.file_id
        user_id = update.message.from_user.id
        file_obj = await context.bot.get_file(file_id)
        file_link = file_obj.file_path

        conn = sqlite3.connect('files.db')
        c = conn.cursor()
        c.execute("INSERT INTO files (user_id, file_id, file_link) VALUES (?, ?, ?)",
                  (user_id, file_id, file_link))
        conn.commit()
        conn.close()

        await update.message.reply_text(f"تم رفع الملف بنجاح! الرابط: {file_link}")
    else:
        await update.message.reply_text("الرجاء إرسال ملف.")

async def list_files(update: Update, context):
    user_id = update.message.from_user.id

    conn = sqlite3.connect('files.db')
    c = conn.cursor()
    c.execute("SELECT file_link FROM files WHERE user_id = ?", (user_id,))
    files = c.fetchall()
    conn.close()

    if files:
        response = "الملفات المخزنة:\n"
        for file in files:
            response += f"{file[0]}\n"
        await update.message.reply_text(response)
    else:
        await update.message.reply_text("لا توجد ملفات مخزنة.")

async def start(update: Update, context):
    await update.message.reply_text("مرحبًا! أرسل لي ملفاتك وسأخزنها لك.")

async def help_command(update: Update, context):
    await update.message.reply_text(
        "الأوامر المتاحة:\n"
        "/start - بدء التفاعل مع البوت\n"
        "/list - عرض الملفات المخزنة\n"
        "أرسل لي ملفًا لرفعه."
    )

def main():
    create_db()
    app = Application.builder().token(TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("list", list_files))
    app.add_handler(CommandHandler("help", help_command))
    app.add_handler(MessageHandler(filters.Document.ALL, upload_file))
    app.run_polling()

if __name__ == '__main__':
    main()
